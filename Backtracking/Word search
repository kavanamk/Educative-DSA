def word_search(grid, word):
    rows, cols = len(grid), len(grid[0])
    paths = set()
    
    def dfs(r, c, i):
        if i == len(word):
            return True
        if r < 0 or r >= rows or c < 0 or c >= cols or grid[r][c] != word[i] or (r, c) in paths:
            return False
        
        paths.add((r, c))
        
        res = (dfs(r+1, c, i+1) or
               dfs(r-1, c, i+1) or
               dfs(r, c+1, i+1) or
               dfs(r, c-1, i+1))
        
        paths.remove((r, c))
        
        return res
    
    for r in range(rows):
        for c in range(cols):
            if dfs(r, c, 0):
                return True
    
    return False


grid = [['K', 'I', 'C', 'D', 'L', 'J', 'M', 'R'],
        ['V', 'M', 'S', 'P', 'C', 'F', 'A', 'G'],
        ['C', 'A', 'G', 'D', 'J', 'O', 'L', 'O'],
        ['Q', 'Z', 'N', 'T', 'F', 'X', 'C', 'T'],
        ['R', 'L', 'A', 'N', 'I', 'R', 'G', 'D'],
        ['J', 'A', 'W', 'Y', 'M', 'O', 'U', 'A'],
        ['Z', 'A', 'P', 'D', 'R', 'C', 'S', 'D'],
        ['Y', 'V', 'A', 'F', 'P', 'L', 'Z', 'T']]

word = "MAG"

print(word_search(grid, word))
