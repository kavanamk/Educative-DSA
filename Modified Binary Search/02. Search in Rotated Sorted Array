def binary_search_rotated(nums, target):
    l, r = 0, len(nums) - 1

    while l <= r:
        mid = (l + r) // 2
        if nums[mid] == target:
            return mid

        # Check if the left half is sorted
        if nums[l] <= nums[mid]:
            if nums[l] <= target < nums[mid]:
                r = mid - 1
            else:
                l = mid + 1
        # Right half must be sorted
        else:
            if nums[mid] < target <= nums[r]:
                l = mid + 1
            else:
                r = mid - 1

    return -1  # Target not found



nums = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14]

target = 25

print(binary_search_rotated(nums,target))
